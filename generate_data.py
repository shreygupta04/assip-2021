import sys
import os
import random
import yaml


nm, numAgents, obsPctCvrg, radius = sys.argv[1:]
numAgents, obsPctCvrg = int(numAgents), float(obsPctCvrg)
n, m = map(int, nm.split('x'))


def createObstacles(obsPctCvrg):
    obs = set()
    while len(obs) < int(obsPctCvrg * n * m):
        obs.add((random.randint(0, n-1), random.randint(0, m-1)))
    return list(obs)


def robotPositions(numRobots, obstacles):
    positions, goalPositions = set(), set()
    while len(positions) != numRobots or len(goalPositions) != numRobots:
        pos, goal = (random.randint(0, n-1), random.randint(0, m-1)), (random.randint(0, n-1), random.randint(0, m-1))
        while pos == goal or pos in obstacles or goal in obstacles:
            pos, goal = (random.randint(0, n-1), random.randint(0, m-1)), (random.randint(0, n-1), random.randint(0, m-1))
        if len(positions) < numRobots:
            positions.add(pos)
        if len(goalPositions) < numRobots:
            goalPositions.add(goal)
    return list(positions), list(goalPositions)

def toYAML(positions, goalPositions, obstacles, radius):
    data = {'radius': radius, 'agents':[], 'map':{'dimensions':[n, m], 'obstacles':[]}}
    for i in range(len(positions)):
        data['agents'].append({
            'name': 'agent' + str(i),
            'start': list(positions[i]),
            'goal': list(goalPositions[i])
        })
    i = 0
    fileName = f'input{numAgents}_{n}x{m}_{obsPctCvrg}_{i}.yaml'
    while os.path.exists('data/' + fileName):
        i += 1
        fileName = f'input{numAgents}_{n}x{m}_{obsPctCvrg}_{i}.yaml'
    
    for i in range(len(obstacles)):
        data['map']['obstacles'].append(tuple(obstacles[i]))

    with open('data/' + fileName, 'w') as output_yaml:
        yaml.dump(data, output_yaml)

obstacles = createObstacles(obsPctCvrg)
# print(obstacles)
# obstacles = [(26, 21), (12, 4), (6, 18), (16, 20), (16, 29), (7, 26), (28, 3), (23, 25), (30, 18), (28, 30), (9, 26), (0, 23), (24, 8), (6, 2), (13, 8), (16, 13), (25, 25), (18, 19), (7, 28), (27, 6), (3, 6), (28, 5), (8, 2), (30, 2), (17, 5), (28, 14), (30, 11), (8, 11), (19, 11), (28, 23), (4, 23), (24, 1), (24, 10), (1, 17), (15, 25), (22, 3), (31, 24), (14, 17), (28, 16), (0, 0), (23, 29), (8, 25), (21, 4), (24, 21), (18, 14), (24, 30), (7, 23), (27, 1), (30, 6), (3, 19), (4, 18), (9, 14), (15, 2), (25, 4), (25, 13), (16, 10), (8, 27), (2, 20), (25, 31), (3, 3), (31, 19), (6, 29), (28, 11), (14, 12), (9, 7), (14, 21), (5, 18), (13, 7), (8, 20), (30, 20), (24, 16), (30, 29), (1, 23), (21, 11), (12, 8), (14, 5), (23, 8), (4, 4), (29, 24), (12, 17), (31, 21), (5, 11), (22, 27), (4, 22), (10, 1), (13, 0), (4, 31), (19, 13), (13, 9), (15, 6), (28, 25), (8, 22), (18, 2), (19, 22), (0, 18), (9, 30), (0, 27), (31, 5), (22, 2), (6, 15), (31, 14), (21, 13), (21, 22), (4, 24), (27, 19), (27, 28), (13, 11), (19, 24), (10, 21), (1, 18), (0, 20), (25, 19), (2, 17), (29, 1), (26, 12), (30, 24), (7, 4), (29, 10), (15, 20), (23, 3), (22, 13), (14, 9), (18, 25), (23, 21), (27, 3), (12, 30), (4, 26), (26, 1), (25, 3), (19, 17), (27, 30), (17, 29), (8, 26), (16, 9), (2, 19), (20, 0), (6, 10), (3, 2), (6, 28), (14, 11), (21, 26), (12, 23), (8, 1), (10, 7), (27, 23), (17, 22), (16, 2), (9, 18), (2, 12), (19, 28), (10, 25), (0, 24), (11, 24), (6, 3), (15, 15), (26, 15), (13, 27), (29, 23), (6, 21), (7, 20), (7, 29), (17, 6), (8, 12), (27, 25), (19, 21), (5, 31), (11, 26), (24, 20), (12, 0), (7, 13), (24, 29), (6, 23), (14, 6), (18, 22), (30, 5), (10, 2), (27, 27), (3, 27), (30, 23), (15, 1), (13, 13), (29, 9), (18, 6), (24, 22), (15, 19), (15, 28), (25, 30), (16, 27), (22, 15), (5, 8), (22, 24), (28, 10), (17, 10), (17, 19), (30, 16), (14, 29), (19, 25), (9, 24), (13, 6), (15, 3), (13, 15), (15, 12), (29, 11), (18, 8)]
# obstacles = [(31, 31), (30, 31), (29, 31), (28, 31), (27, 31), (24, 31), (23, 31), (22, 31), (21, 31), (20, 31), (19, 31), (18, 31), (15, 31), (14, 31), (11, 31), (10, 31), (9, 31), (8, 31), (7, 31), (6, 31), (5, 31), (4, 31), (1, 31), (0, 31), (31, 30), (18, 30), (18, 29), (0, 29), (31, 28), (0, 28), (0, 27), (27, 26), (24, 26), (23, 26), (18, 26), (11, 26), (10, 26), (9, 26), (8, 26), (7, 26), (6, 26), (5, 26), (4, 26), (3, 26), (2, 26), (1, 26), (0, 26), (27, 25), (18, 24), (9, 24), (8, 24), (4, 24), (0, 24), (27, 23), (18, 23), (0, 23), (27, 22), (9, 22), (8, 22), (0, 22), (30, 21), (29, 21), (28, 21), (27, 21), (20, 21), (19, 21), (8, 21), (18, 8), (31, 20), (18, 7), (31, 19), (18, 5), (31, 17), (26, 16), (25, 16), (24, 16), (22, 16), (27, 3), (8, 16), (7, 16), (6, 16), (0, 16), (18, 3), (31, 15), (30, 15), (29, 15), (26, 15), (25, 15), (24, 15), (22, 15), (31, 27), (18, 15), (31, 2), (12, 15), (11, 15), (0, 9), (13, 21), (27, 2), (8, 15), (7, 15), (6, 15), (0, 15), (23, 8), (4, 21), (18, 2), (31, 14), (31, 26), (18, 14), (0, 8), (13, 20), (27, 1), (8, 14), (13, 26), (0, 14), (12, 26), (18, 1), (31, 13), (31, 25), (18, 13), (9, 12), (0, 6), (13, 18), (8, 12), (31, 11), (0, 5), (13, 17), (8, 11), (31, 10), (30, 10), (29, 10), (9, 23), (28, 10), (0, 17), (8, 23), (27, 10), (18, 4), (31, 16), (26, 10), (30, 16), (25, 10), (29, 16), (24, 10), (27, 16), (22, 10), (23, 16), (31, 22), (18, 10), (13, 10), (9, 10), (0, 4), (13, 16), (8, 10), (31, 3), (12, 16), (7, 10), (11, 16), (6, 10), (10, 16), (18, 22), (5, 10), (9, 16), (4, 10), (9, 21), (4, 15), (31, 8), (0, 21), (22, 8), (31, 7), (23, 7), (0, 20), (22, 7), (9, 7), (0, 1), (13, 13), (8, 7), (18, 27), (5, 15), (31, 5), (13, 24), (0, 12), (27, 5), (23, 5), (0, 18), (22, 5), (17, 5), (16, 5), (15, 5), (14, 5), (31, 23), (18, 11), (13, 5), (9, 5), (9, 8), (13, 11), (8, 5), (26, 26), (0, 2), (13, 14), (8, 8), (7, 5), (0, 30), (6, 5), (31, 29), (5, 5), (9, 11), (4, 5), (31, 4), (28, 0), (9, 13), (31, 0), (8, 13), (27, 0), (26, 31), (0, 7), (13, 19), (30, 0), (25, 31), (31, 6), (26, 0), (18, 28), (5, 16), (13, 22), (0, 10), (29, 0), (4, 16), (31, 9), (25, 0), (18, 25), (24, 0), (23, 0), (13, 25), (19, 0), (0, 13), (22, 0), (31, 12), (18, 0), (17, 31), (23, 6), (21, 0), (13, 31), (0, 19), (16, 31), (22, 6), (17, 0), (28, 15), (4, 22), (23, 9), (20, 0), (27, 15), (22, 9), (22, 26), (9, 14), (25, 26), (31, 1), (13, 0), (12, 31), (18, 6), (31, 18), (16, 0), (23, 15), (31, 21), (18, 9), (9, 25), (15, 0), (13, 23), (0, 11), (27, 4), (8, 25), (14, 0), (12, 0), (11, 0), (4, 25), (10, 0), (9, 0), (31, 24), (5, 0), (18, 12), (8, 0), (4, 0), (3, 31), (9, 6), (7, 0), (22, 21), (9, 9), (0, 0), (13, 12), (3, 0), (2, 31), (8, 6), (0, 25), (6, 0), (28, 16), (4, 23), (23, 10), (18, 21), (0, 3), (13, 15), (21, 21), (8, 9), (10, 15), (2, 0), (9, 15), (27, 24), (1, 0)]
positions, goalPositions = robotPositions(numAgents, obstacles)
toYAML(positions, goalPositions, obstacles, radius)